#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

HOSTNAME=`hostname | cut -d. -f1`

USER='backuprsync'
BIN='/home/'$USER'/mysql-bak'

DIR='/backup/sql'
LOG=$DIR'/'$HOSTNAME'-mysql-backup.log'
ERR=$DIR'/'$HOSTNAME'-mysql-error.log'

MYSQL='/usr/bin/mysql'
DUMP='/usr/bin/mysqldump'
GZIP='/bin/gzip -9 -c'
MD5='/usr/bin/md5sum'

create_user ()
{
cat << EOF
 CREATE USER $USER;
 GRANT
 FILE,
 LOCK TABLES,
 PROCESS,
 RELOAD,
 SELECT,
 SHOW VIEW,
 SUPER
 ON *.*
 TO '$USER'@'localhost';
 SET PASSWORD FOR '$USER'@'localhost'=PASSWORD('12345678');
 FLUSH PRIVILEGES;
EOF
}

chmod ()
{
  chmod 400 /home/$USER/.my.cnf
}

my_cnf ()
{

cat << EOF

[mysqldump]
user=$USER
password=12345678

[client]
user=$USER
password=12345678

EOF

}

crontab ()
{

cat << EOF
SHELL=/bin/bash
LANG=es_AR.UTF-8
LANGUAGE=es_AR.UTF-8
LC_CTYPE="es_AR.UTF-8"
0   1 *     * * /bin/bash $BIN weekday
0   2 */7   * * /bin/bash $BIN month
0   3 */7   * * /bin/bash $BIN now
50 23 28-31 * * /bin/bash $BIN last
EOF

}

OPTIONS=$(cat << EOF
 --add-drop-database
 --add-drop-table
 --create-options
 --default-character-set=utf8
 --extended-insert
 --single-transaction
 --skip-events
 -h localhost
EOF
)

last_day ()
{
  if [ $(/bin/date -d +1day +%d) -eq 1 ]
  then
      /bin/bash "$BIN" month
  fi
}

WEEKDAY=$(/bin/date +%a)
NOW=$(/bin/date +%F_%H-%M)
YEAR=$(/bin/date +%Y)
MONTH=$(/bin/date +%b)

case $1 in
  my_cnf)
    my_cnf
    exit
    ;;
  create_user)
    create_user
    exit
    ;;
  chmod)
    chmod
    exit
    ;;
  crontab)
    crontab
    exit
    ;;
  now)
    NAME=$NOW
    ;;
  weekday)
    NAME=$WEEKDAY
    ;;
  month)
    NAME=$YEAR-$MONTH
    ;;
  last)
    last_day
    exit
    ;;
  *)
    echo 1 "$NOW" 'ERROR now, weekday, month' >>"$LOG"
    exit 1
    ;;
esac

if [ -d "$DIR" ]
then
  mkdir -p "$DIR"
fi

cd "$DIR"

DATABASES=$(echo "SHOW DATABASES;" | "$MYSQL" --batch -u "$USER" -N)

if [ -z "$DATABASES" ]
then
    echo 1 "$NOW ERROR NO DATABASES!" >>"$LOG"
    exit 1
fi

to_date ()
{
   date -d @"$1" "+%F %R"
}

to_hhmmss ()
{
    date -d "1970-01-01 $1 seconds" +%H:%M:%S
}

for DB in $DATABASES
do
    FILE="$HOSTNAME-$DB-$NAME".sql.gz
    START=`date +%s`
    OPT=`echo "$OPTIONS" | tr "\n" " "`
    $DUMP -u $USER $OPT $DB | $GZIP >$FILE 2>>$ERR
    END=`date +%s`
    TOTAL=`expr "$END" - "$START"`
    SS=`to_date "$START"`
    SE=`to_date "$END"`
    ST=`to_hhmmss "$TOTAL"`
    MD5_FILE=`$MD5 "$FILE"`
    echo "$SS $SE $ST $MD5_FILE" >>"$LOG"
done

